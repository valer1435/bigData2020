[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(--addPluginSbtFile=C:\Users\Valery\AppData\Local\Temp\idea.sbt, None, None)
[debug] > Exec(addPluginSbtFile=C:\Users\Valery\AppData\Local\Temp\idea.sbt, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (JetBrains s.r.o Java 11.0.3)
[debug]       Load.loadUnit: plugins took 157.3377ms
[debug]       Load.loadUnit: defsScala took 0.4404ms
[debug] [Loading] Scanning directory C:\Users\Valery\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Valery\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.1328 ms
[debug]           Load.resolveProject(global-plugins) took 84.3307ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Valery\.sbt\1.0\plugins, plugins: List(<none>))) took 160.3314ms
[debug] [Loading] Done in C:\Users\Valery\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 197.5371ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3122ms
[debug]     Load.loadUnit(file:/C:/Users/Valery/.sbt/1.0/plugins/, ...) took 370.7865ms
[debug]   Load.apply: load took 697.8918ms
[debug]   Load.apply: resolveProjects took 8.526ms
[debug]   Load.apply: finalTransforms took 85.2712ms
[debug]   Load.apply: config.delegates took 10.9992ms
[debug]   Load.apply: Def.make(settings)... took 1195.1535ms
[debug]   Load.apply: structureIndex took 148.1258ms
[debug]   Load.apply: mkStreams took 2.6349ms
[info] loading global plugins from C:\Users\Valery\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9254.6797ms
[debug]           Load.loadUnit: plugins took 46.7211ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory E:\Programming\JavaProjects\pokrovsky_homework\project
[debug]             Load.loadUnit: mkEval took 16.2168ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Programming\JavaProjects\pokrovsky_homework\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1221 ms
[info] loading settings for project pokrovsky_homework-build from idea.sbt ...
[debug]               Load.resolveProject(pokrovsky_homework-build) took 6.6115ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pokrovsky_homework-build, base: E:\Programming\JavaProjects\pokrovsky_homework\project, plugins: List(<none>))) took 11.752ms
[debug] [Loading] Done in E:\Programming\JavaProjects\pokrovsky_homework\project, returning: (pokrovsky_homework-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5454.217ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.0357ms
[debug]         Load.loadUnit(file:/E:/Programming/JavaProjects/pokrovsky_homework/project/, ...) took 5511.0988ms
[debug]       Load.apply: load took 5513.2277ms
[debug]       Load.apply: resolveProjects took 0.1578ms
[debug]       Load.apply: finalTransforms took 19.3279ms
[debug]       Load.apply: config.delegates took 0.6277ms
[debug]       Load.apply: Def.make(settings)... took 121.3713ms
[debug]       Load.apply: structureIndex took 49.1122ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from E:\Programming\JavaProjects\pokrovsky_homework\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11397.8944ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory E:\Programming\JavaProjects\pokrovsky_homework
[debug]       Load.loadUnit: mkEval took 0.4872ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Programming\JavaProjects\pokrovsky_homework, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3428 ms
[info] loading settings for project pokrovsky_homework from build.sbt ...
[debug]         Load.resolveProject(pokrovsky_homework) took 127.7328ms
[debug]       Load.loadTransitive: finalizeProject(Project(id pokrovsky_homework, base: E:\Programming\JavaProjects\pokrovsky_homework, plugins: List(<none>))) took 133.7593ms
[debug] [Loading] Done in E:\Programming\JavaProjects\pokrovsky_homework, returning: (pokrovsky_homework)
[debug]     Load.loadUnit: loadedProjectsRaw took 5614.7195ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.1852ms
[debug]   Load.loadUnit(file:/E:/Programming/JavaProjects/pokrovsky_homework/, ...) took 17034.6144ms
[debug] Load.apply: load took 17043.3402ms
[debug] Load.apply: resolveProjects took 0.1453ms
[debug] Load.apply: finalTransforms took 91.3159ms
[debug] Load.apply: config.delegates took 0.6283ms
[debug] Load.apply: Def.make(settings)... took 538.5464ms
[debug] Load.apply: structureIndex took 66.013ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to pokrovsky_homework (in build file:/E:/Programming/JavaProjects/pokrovsky_homework/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50630 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50630, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pokrovsky_homework (in build file:/E:/Programming/JavaProjects/pokrovsky_homework/)
[debug] > Exec(idea-shell, None, None)
